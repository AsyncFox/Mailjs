class Mailjs{constructor(){this.baseUrl="https://api.mail.tm",this.token="",this.id="",this.address=""}async register(s,e){const t={address:s,password:e};return this.send_("/accounts","POST",t)}async login(s,e){const t={address:s,password:e},n=await this.send_("/token","POST",t);return n.status&&(this.token=n.data.token,this.id=n.data.id),n}async me(){return this.send_("/me")}async getAccount(s){return this.send_("/accounts/"+s)}async deleteAccount(s){return this.send_("/accounts/"+s,"DELETE")}async deleteMe(){return this.deleteAccount(this.id)}async getDomains(){return this.send_("/domains?page=1")}async getDomain(s){return this.send_("/domains/"+s)}async listMessages(s=1){return this.send_(`/messages?page=${s}`)}async getMessage(s){return this.send_("/messages/"+s)}async deleteMessage(s){return this.send_("/messages/"+s,"DELETE")}async makeSeenTrue(s){return this.send_("/messages/"+s,"PATCH",{seen:!0})}async getSource(s){return this.send_("/sources/"+s)}async send_(s,e="GET",t){const n={method:e,headers:{accept:"application/json",authorization:`Bearer ${this.token}`}};if("POST"===e||"PATCH"===e){const s="PATCH"===e?"merge-patch+json":"json";n.headers["content-type"]=`application/${s}`,n.body=JSON.stringify(t)}const a=await fetch(this.baseUrl+s,n);let i;const r=a.headers.get("content-type");return i=r&&r.startsWith("application/json")?await a.json():await a.text(),{status:a.ok,message:a.ok?"ok":i.message,data:i}}}
